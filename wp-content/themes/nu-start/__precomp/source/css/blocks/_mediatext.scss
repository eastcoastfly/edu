//
//
//

.wp-block-media-text {

	.wp-block-media-text__content {
		> * + * {
			margin-top: var(--wp--style--block-gap);
		}
	}
}

//
//
//
//
.wp-block-media-text {
	// ? 		flush content against vertical edges
	gap: var(--wp--style--block-gap);
	gap: var(--wp--custom--spacing--outer);
	.wp-block-media-text__content {
		@include flush_inner_content_vertical();
		padding-left: 0 !important;
		padding-right: 0 !important;
	}

	// ?		collapse early and always have the media above
	@include media("<small") {
		gap: $margin_2x;
		grid-template-columns: 100% !important;
		// appears to need specificity to either layout alignment
		&,
		&.has-media-on-the-right {
			// media always above content
			> .wp-block-media-text__media {
				grid-row: 1;
				grid-column: 1;
				transform: translate(0, 0) !important;
				max-height: min(40vh, 600px);
				img {
					height: 100%;
				}
			}
			// contenet always below media
			> .wp-block-media-text__content {
				grid-row: 2;
				grid-column: 1;
			}
		}
	}
}

// ?		"card" style; very light touch
//
//
.wp-block-media-text.is-style-squared-card {
	border: 1px solid var(--wp--preset--color--neutral-1);
	background-color: var(--wp--preset--color--light);
	gap: 0px;
	.wp-block-media-text__content {
		padding: var(--wp--style--block-gap);
		padding-left: var(--wp--style--block-gap) !important;
		padding-right: var(--wp--style--block-gap) !important;
	}
}

// ?		handle when the block has a hyperlink - sadly, we don't get a conditional class
//
//
.wp-block-media-text figure a {
	$speed: 0.5s;

	display: block;

	// ?		consistent transitions / animations
	&::before,
	&::after,
	img {
		transition: all $speed $bezier;
	}

	// ?		fa icon arrow-right or arrow-up-from-square to designate which kind of link this is
	@include nu_fa_icon("\f061", after);
	&:after {
		position: absolute;
		z-index: 2;
		top: 0;
		right: 0;
		background-color: var(--wp--preset--color--dark);
		color: var(--wp--preset--color--white);
		padding: 12px;
		font-size: 12px;
		width: 36px;
		height: 36px;
		opacity: 0.75;
	}
	&[target="_blank"] {
		&::after {
			content: "\f08e";
		}
	}

	// ?		prepend a pseudo element to animate in a border on hover
	//
	//
	&::before {
		content: "";
		display: block;
		position: absolute;
		width: 100%;
		height: 100%;
		z-index: 1;
		animation: media-text-border-out $speed both $bezier;
		animation-delay: 0ms;
		opacity: 0.5;
	}

	// ?		when interacted, run transitions
	//
	//
	&:focus-within,
	&:hover {
		&::after {
			background-color: transparent;
			opacity: 1;
		}
		&:before {
			animation: media-text-border-in $speed both $bezier;
			animation-delay: 0ms;
		}
		img {
			transform: scale(1.2);
		}
	}
}
